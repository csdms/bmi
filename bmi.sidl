/*
  The CSDMS Basic Model Interface

  This Scientific Interface Definition Language (SIDL) file describes
  the Basic Model Interface (BMI) in a human-readable, language- and
  platform-independent manner. For more information on the BMI, see:

      https://csdms.colorado.edu/wiki/BMI_Description

*/
package csdms version 1.0 {
  interface bmi {
    int initialize(in string config_file);	            	
    int update(in double time_interval);	            	
    int finalize();	            	
            
    int get_start_time(out double time);
    int get_current_time(out double time);
    int get_end_time(out double time);
    int get_time_step(out double time_step);
    int get_time_units(out string units);

    int get_component_name(out string name);
    int get_input_item_count(out int count);
    int get_output_item_count(out int count);
    int get_input_var_names(out array<string, 1> names);
    int get_output_var_names(out array<string, 1> names);

    int get_var_type(in string name, out string type);
    int get_var_units(in string name, out string units);
    int get_var_nbytes(in string name, out int nbytes);
    int get_var_itemsize(in string name, out int size);
    int get_var_grid(in string name, out int grid);

    // Grid information
    int get_grid_type(in int grid, out string type);
    int get_grid_rank(in int grid, out int rank);
    int get_grid_size(in int grid, out int size);

    // Uniform rectilinear
    int get_grid_shape(in int grid, in array<int, 1> shape);
    int get_grid_spacing(in int grid, in array<double, 1> spacing);
    int get_grid_origin(in int grid, in array<double, 1> origin);

    // Non-uniform rectilinear, curvilinear
    int get_grid_x(in int grid, in array<double, 1> x);
    int get_grid_y(in int grid, in array<double, 1> y);
    int get_grid_z(in int grid, in array<double, 1> z);

    // Unstructured
    int get_grid_connectivity(in int grid, in array<int, 1> connectivity);
    int get_grid_offset(in int grid, in array<int, 1> offset);
            
    int get_value(in string name, in array<> dest);
    int get_value_ptr(in string name, out array<> values);
    int get_value_at_indices(in string name, in array<> dest,
        in array<int, 1> inds);

    int set_value(in string name, in array<> values);
    int set_value_at_indices(in string name, in array<int, 1> inds,
        in array<> src);
  }
}
